{"ast":null,"code":"import axios from 'axios';\nlet baseURL;\nprocess.env.NODE_ENV === 'production' // ? (baseURL = 'https://sheltered-dawn-07708.herokuapp.com')\n? baseURL = 'window.location.origin' : baseURL = 'http://localhost:5000';\nconst service = axios.create({\n  withCredentials: true,\n  baseURL\n});\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in');\n  },\n  signUp: async user => {\n    return await service.post('/signup', user);\n  },\n  logIn: async user => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  },\n  fileUpload: async data => {\n    return await service.post('/fileupload', data);\n  },\n  userdata: async userdata => {\n    return await service.post('/userdata', userdata);\n  },\n  project: async data => {\n    return await service.post('/project', data);\n  },\n  getuserdata: async () => {\n    return await service.get('/getuserdata');\n  },\n  favoriteJob: async data => {\n    return await service.post('/favorite_job', data);\n  },\n  getFavoriteJobs: async () => {\n    return await service.get('/getfavoritejobs');\n  },\n  deleteJob: async data => {\n    return await service.get('/deletejob', `/${data}`);\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/services/index.js"],"names":["axios","baseURL","process","env","NODE_ENV","service","create","withCredentials","actions","isLoggedIn","get","signUp","user","post","logIn","logOut","fileUpload","data","userdata","project","getuserdata","favoriteJob","getFavoriteJobs","deleteJob"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,OAAJ;AAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,CACE;AADF,EAEKH,OAAO,GAAG,wBAFf,GAGKA,OAAO,GAAG,uBAHf;AAKA,MAAMI,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBN,EAAAA;AAAzB,CAAb,CAAhB;AAEA,MAAMO,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,YAAY;AACtB,WAAO,MAAMJ,OAAO,CAACK,GAAR,CAAY,eAAZ,CAAb;AACD,GAHa;AAIdC,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACtB,WAAO,MAAMP,OAAO,CAACQ,IAAR,CAAa,SAAb,EAAwBD,IAAxB,CAAb;AACD,GANa;AAOdE,EAAAA,KAAK,EAAE,MAAOF,IAAP,IAAgB;AACrB,WAAO,MAAMP,OAAO,CAACQ,IAAR,CAAa,QAAb,EAAuBD,IAAvB,CAAb;AACD,GATa;AAUdG,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,MAAMV,OAAO,CAACK,GAAR,CAAY,SAAZ,CAAb;AACD,GAZa;AAadM,EAAAA,UAAU,EAAE,MAAOC,IAAP,IAAgB;AAC1B,WAAO,MAAMZ,OAAO,CAACQ,IAAR,CAAa,aAAb,EAA4BI,IAA5B,CAAb;AACD,GAfa;AAgBdC,EAAAA,QAAQ,EAAE,MAAOA,QAAP,IAAoB;AAC5B,WAAO,MAAMb,OAAO,CAACQ,IAAR,CAAa,WAAb,EAA0BK,QAA1B,CAAb;AACD,GAlBa;AAmBdC,EAAAA,OAAO,EAAE,MAAOF,IAAP,IAAgB;AACvB,WAAO,MAAMZ,OAAO,CAACQ,IAAR,CAAa,UAAb,EAAyBI,IAAzB,CAAb;AACD,GArBa;AAsBdG,EAAAA,WAAW,EAAE,YAAY;AACvB,WAAO,MAAMf,OAAO,CAACK,GAAR,CAAY,cAAZ,CAAb;AACD,GAxBa;AAyBdW,EAAAA,WAAW,EAAE,MAAOJ,IAAP,IAAgB;AAC3B,WAAO,MAAMZ,OAAO,CAACQ,IAAR,CAAa,eAAb,EAA8BI,IAA9B,CAAb;AACD,GA3Ba;AA4BdK,EAAAA,eAAe,EAAE,YAAY;AAC3B,WAAO,MAAMjB,OAAO,CAACK,GAAR,CAAY,kBAAZ,CAAb;AACD,GA9Ba;AA+Bda,EAAAA,SAAS,EAAE,MAAON,IAAP,IAAgB;AACzB,WAAO,MAAMZ,OAAO,CAACK,GAAR,CAAY,YAAZ,EAA2B,IAAGO,IAAK,EAAnC,CAAb;AACD;AAjCa,CAAhB;AAoCA,eAAeT,OAAf","sourcesContent":["import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  // ? (baseURL = 'https://sheltered-dawn-07708.herokuapp.com')\n  ? (baseURL = 'window.location.origin')\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in')\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user)\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user)\n  },\n  logOut: async () => {\n    return await service.get('/logout')\n  },\n  fileUpload: async (data) => {\n    return await service.post('/fileupload', data)\n  },\n  userdata: async (userdata) => {\n    return await service.post('/userdata', userdata)\n  },\n  project: async (data) => {\n    return await service.post('/project', data)\n  },\n  getuserdata: async () => {\n    return await service.get('/getuserdata')\n  },\n  favoriteJob: async (data) => {\n    return await service.post('/favorite_job', data)\n  },\n  getFavoriteJobs: async () => {\n    return await service.get('/getfavoritejobs')\n  },\n  deleteJob: async (data) => {\n    return await service.get('/deletejob', `/${data}`)\n  },\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}