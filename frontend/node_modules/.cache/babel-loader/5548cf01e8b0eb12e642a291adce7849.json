{"ast":null,"code":"var _jsxFileName = \"/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/Projects.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport HttpIcon from '@material-ui/icons/Http';\n\nclass Project extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.continue = e => {\n      e.preventDefault();\n\n      if (this.props.index < 2) {\n        this.props.nextStep();\n        this.props.addProj();\n      }\n\n      this.props.nextStep();\n    };\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.PreviousStep();\n    };\n  }\n\n  render() {\n    const {\n      values,\n      handleProjectChange,\n      index\n    } = this.props;\n    let picId = `picture-${index}`,\n        titleId = `title-${index}`,\n        descId = `description-${index}`,\n        techId = `technologies_used-${index}`,\n        gitId = `githubrepourl-${index}`,\n        siteId = `sitelink-${index}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Project \", index + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: picId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"Upload Project picture for your portfolio\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      \"aria-describedby\": \"inputGroupFileAddon\",\n      onChange: handleProjectChange('picture'),\n      className: \"picture\",\n      name: picId,\n      value: values.project[index].picture,\n      id: picId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: titleId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Project Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"title\",\n      name: titleId,\n      onChange: handleProjectChange('title'),\n      value: values.project[index].title,\n      id: titleId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: techId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"The Technologies Used\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"technologies_used\",\n      name: techId,\n      onChange: handleProjectChange('technologies_used'),\n      value: values.project[index].technologies_used,\n      id: techId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: descId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Project Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      rows: \"4\",\n      className: \"description\",\n      name: descId,\n      onChange: handleProjectChange('description'),\n      value: values.project[index].description,\n      id: descId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: gitId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GitHubIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }\n    }), \" Project GitHub link\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      className: \"githubrepourl\",\n      name: gitId,\n      onChange: handleProjectChange('githubrepourl'),\n      value: values.project[index].githubrepourl,\n      id: gitId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: siteId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(HttpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }), \" Site's url\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      className: \"sitelink\",\n      name: siteId,\n      onChange: handleProjectChange('sitelink'),\n      value: values.project[index].sitelink,\n      id: siteId,\n      \"data-id\": index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Return\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.continue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Continue\")));\n  }\n\n}\n\nexport default Project; // picture: String,\n//     title: String,\n//     technologies_used: String,\n//     description: String,\n//     githubrepourl: String,\n//     sitelink: String,\n\n{\n  /* <h1>Dynamic Form Fields in React</h1>\n  <form onSubmit={handleSubmit}>\n   <div className=\"form-row\">\n     {inputFields.map((inputField, index) => (\n       <Fragment key={`${inputField}~${index}`}>\n         <div className=\"form-group col-sm-6\">\n           <label htmlFor=\"firstName\">First Name</label>\n           <input\n             type=\"text\"\n             className=\"form-control\"\n             id=\"firstName\"\n             name=\"firstName\"\n             value={inputField.firstName}\n             onChange={event => handleInputChange(index, event)}\n           />\n         </div>\n         <div className=\"form-group col-sm-4\">\n           <label htmlFor=\"lastName\">Last Name</label>\n           <input\n             type=\"text\" \n             className=\"form-control\" \n             id=\"lastName\"\n             name=\"lastName\"\n             value={inputField.lastName}\n             onChange={event => handleInputChange(index, event)}\n           />\n         </div>\n         <div className=\"form-group col-sm-2\">\n           <button\n             className=\"btn btn-link\"\n             type=\"button\"\n             onClick={() => handleRemoveFields(index)}\n           >\n             -\n           </button>\n           <button\n             className=\"btn btn-link\"\n             type=\"button\"\n             onClick={() => handleAddFields()}\n           >\n             +\n           </button>\n         </div>\n       </Fragment>\n     ))}\n   </div>\n   <div className=\"submit-button\">\n     <button\n       className=\"btn btn-primary mr-2\"\n       type=\"submit\"\n       onSubmit={handleSubmit}\n     >\n       Save\n     </button>\n   </div>\n   <br/>\n   <pre>\n     {JSON.stringify(inputFields, null, 2)}\n   </pre>\n  </form> */\n}","map":{"version":3,"sources":["/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/Projects.js"],"names":["React","Component","TextField","Button","GitHubIcon","HttpIcon","Project","continue","e","preventDefault","props","index","nextStep","addProj","back","PreviousStep","render","values","handleProjectChange","picId","titleId","descId","techId","gitId","siteId","project","picture","title","technologies_used","description","githubrepourl","sitelink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport HttpIcon from '@material-ui/icons/Http';\n\n\n\n\nclass Project extends Component {\n    continue = e => {\n        e.preventDefault();\n        if(this.props.index < 2){\n            this.props.nextStep();\n            this.props.addProj();\n        }\n        \n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.PreviousStep();\n    }\n\n    render() {\n        const { values, handleProjectChange, index } = this.props;\n        let picId = `picture-${index}`,titleId = `title-${index}`, descId = `description-${index}`, techId = `technologies_used-${index}`, \n        gitId = `githubrepourl-${index}`, siteId = `sitelink-${index}` \n        return (\n            <div className=\"form-container\">\n                <h1 className=\"mb-5\">Project {index + 1}</h1>\n                <div className=\"form-group\">\n                    <label htmlFor={picId}>Upload Project picture for your portfolio</label>\n                    <input\n                                        type=\"file\"\n                                        aria-describedby=\"inputGroupFileAddon\"\n                                        onChange={handleProjectChange('picture')}\n                                        className=\"picture\"\n                                        name={picId}\n                                        value={values.project[index].picture}\n                                        id={picId}\n                                        data-id={index}\n                                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor={titleId}>Project Title</label>\n                    <input type=\"text\" className=\"title\" name={titleId} onChange={handleProjectChange('title')} value={values.project[index].title} id={titleId}  data-id={index} />\n               \n                    <label htmlFor={techId}>The Technologies Used</label>\n                    <input type=\"text\" className=\"technologies_used\" name={techId} onChange={handleProjectChange('technologies_used')} value={values.project[index].technologies_used} id={techId} data-id={index} />\n                \n                    <label htmlFor={descId}>Project Description</label>\n                    <textarea type=\"text\" rows=\"4\" className=\"description\" name={descId} onChange={handleProjectChange('description')} value={values.project[index].description} id={descId} data-id={index} />\n           \n                    <label htmlFor={gitId}><GitHubIcon /> Project GitHub link</label> \n                    <input type=\"url\" className=\"githubrepourl\" name={gitId} onChange={handleProjectChange('githubrepourl')} value={values.project[index].githubrepourl} id={gitId} data-id={index} />\n                \n                    <label htmlFor={siteId}><HttpIcon /> Site's url</label> \n                    <input type=\"url\" className=\"sitelink\" name={siteId} onChange={handleProjectChange('sitelink')} value={values.project[index].sitelink} id={siteId} data-id={index} />\n                </div>\n\n                <div className=\"text-left\">\n                    <button className=\"btn btn-primary\" onClick={this.back}>Return</button>\n                </div>\n\n                <div className=\"text-right\">\n                    <button className=\"btn btn-primary\" onClick={this.continue}>Continue</button>\n                </div>\n            </div> \n        );\n    }\n}\n\n\n\n\nexport default Project;\n\n// picture: String,\n//     title: String,\n//     technologies_used: String,\n//     description: String,\n//     githubrepourl: String,\n//     sitelink: String,\n\n\n{/* <h1>Dynamic Form Fields in React</h1>\n<form onSubmit={handleSubmit}>\n  <div className=\"form-row\">\n    {inputFields.map((inputField, index) => (\n      <Fragment key={`${inputField}~${index}`}>\n        <div className=\"form-group col-sm-6\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={inputField.firstName}\n            onChange={event => handleInputChange(index, event)}\n          />\n        </div>\n        <div className=\"form-group col-sm-4\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\" \n            className=\"form-control\" \n            id=\"lastName\"\n            name=\"lastName\"\n            value={inputField.lastName}\n            onChange={event => handleInputChange(index, event)}\n          />\n        </div>\n        <div className=\"form-group col-sm-2\">\n          <button\n            className=\"btn btn-link\"\n            type=\"button\"\n            onClick={() => handleRemoveFields(index)}\n          >\n            -\n          </button>\n          <button\n            className=\"btn btn-link\"\n            type=\"button\"\n            onClick={() => handleAddFields()}\n          >\n            +\n          </button>\n        </div>\n      </Fragment>\n    ))}\n  </div>\n  <div className=\"submit-button\">\n    <button\n      className=\"btn btn-primary mr-2\"\n      type=\"submit\"\n      onSubmit={handleSubmit}\n    >\n      Save\n    </button>\n  </div>\n  <br/>\n  <pre>\n    {JSON.stringify(inputFields, null, 2)}\n  </pre>\n</form> */}"]},"metadata":{},"sourceType":"module"}