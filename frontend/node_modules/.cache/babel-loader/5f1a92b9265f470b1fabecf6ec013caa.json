{"ast":null,"code":"import { useReducer, useEffect } from \"react\";\nimport axios from 'axios';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  FETCH_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\nconst BASE_URL = \"https://api.allorigins.win/raw?url=https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.FETCH_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function FetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      console.log();\n      dispatch({\n        type: ACTIONS.FETCH_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    }); // const cancelToken2 = axios.CancelToken.source()\n    // axios.get(BASE_URL, {\n    //     cancelToken: cancelToken2.token,\n    //     params: { markdown: true, page: page + 1, ...params}\n    // }).then( res => {\n    //     dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage : res.data.length !== 0 } }) \n    // }).catch( e => {\n    //     if(axios.isCancel(e)) return\n    //     dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    // })\n\n    return () => {\n      cancelToken1.cancel(); // cancelToken2.cancel()\n    };\n  }, [params, page]);\n  return state;\n}","map":{"version":3,"sources":["/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/services/fetchjobs.js"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","FETCH_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","FetchJobs","params","page","dispatch","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","console","log","data","catch","e","isCancel","cancel"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst ACTIONS = {\n    MAKE_REQUEST : 'make-request',\n    FETCH_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = \"https://api.allorigins.win/raw?url=https://jobs.github.com/positions.json\"\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { loading: true, jobs: [] }\n        case ACTIONS.FETCH_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs }\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return { ...state, hasNextPage: action.payload.hasNextPage }\n        default:\n            return state;\n    }\n}\n\nexport default function FetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true } )\n\n    useEffect( () => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch({ type: ACTIONS.MAKE_REQUEST})\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params}\n        }).then( res => {\n            console.log();\n            dispatch({ type: ACTIONS.FETCH_DATA, payload: { jobs: res.data } }) \n        }).catch( e => {\n            if(axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n        })\n\n        // const cancelToken2 = axios.CancelToken.source()\n        // axios.get(BASE_URL, {\n        //     cancelToken: cancelToken2.token,\n        //     params: { markdown: true, page: page + 1, ...params}\n        // }).then( res => {\n        //     dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage : res.data.length !== 0 } }) \n        // }).catch( e => {\n        //     if(axios.isCancel(e)) return\n        //     dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n        // })\n        \n        return () => {\n            cancelToken1.cancel()\n            // cancelToken2.cancel()\n        }\n    }, [params, page])\n    \n    return state\n}"]},"metadata":{},"sourceType":"module"}