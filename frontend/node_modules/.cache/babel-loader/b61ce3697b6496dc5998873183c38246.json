{"ast":null,"code":"var _jsxFileName = \"/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/Projects.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GitHubIcon, HttpIcon } from '@material-ui/icons/LinkedIn';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nclass Project extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.continue = e => {\n      e.preventDefault();\n      this.props.nextStep();\n    };\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.PreviousStep();\n    };\n  }\n\n  render() {\n    const {\n      values,\n      handleChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true // id=\"outlined-required\"\n      ,\n      label: \"Title\",\n      defaultValue: \"title\",\n      variant: \"outlined\",\n      onChange: handleChange('title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true // id=\"outlined-required\"\n      ,\n      label: \"Technologies used\",\n      defaultValue: \"technologies_used\",\n      variant: \"outlined\",\n      onChange: handleChange('technologies_used'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-multiline-static\",\n      label: \"Description\",\n      multiline: true,\n      variant: \"outlined\",\n      rows: 4,\n      defaultValue: \"description\",\n      onChange: handleChange('description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"input-with-icon-textfield\",\n      label: \"Github Link\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(GitHubIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }))\n      },\n      defaultValue: \"githubrepourl\",\n      onChange: handleChange('githubrepourl'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"input-with-icon-textfield\",\n      label: \"Website Link\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(HttpIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }))\n      },\n      defaultValue: \"{values.sitelink}\",\n      onChange: handleChange('sitelink'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: styles.button,\n      onClick: this.back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: styles.button,\n      onClick: this.continue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"continue\"))));\n  }\n\n}\n\nconst styles = {\n  button: {\n    margin: 15\n  }\n};\nexport default Project; // picture: String,\n//     title: String,\n//     technologies_used: String,\n//     description: String,\n//     githubrepourl: String,\n//     sitelink: String,","map":{"version":3,"sources":["/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/Projects.js"],"names":["React","Component","TextField","Button","GitHubIcon","HttpIcon","InputAdornment","Project","continue","e","preventDefault","props","nextStep","back","PreviousStep","render","values","handleChange","startAdornment","styles","button","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GitHubIcon, HttpIcon } from '@material-ui/icons/LinkedIn';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nclass Project extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.PreviousStep();\n    }\n\n    render() {\n        const { values, handleChange } = this.props;\n        return (\n            <div>\n            <form noValidate autoComplete=\"on\">\n                <TextField\n                    required\n                    // id=\"outlined-required\"\n                    label=\"Title\"\n                    defaultValue='title'\n                    variant=\"outlined\"\n                    onChange={handleChange('title')}\n                />\n                <TextField\n                    required\n                    // id=\"outlined-required\"\n                    label=\"Technologies used\"\n                    defaultValue='technologies_used'\n                    variant=\"outlined\"\n                    onChange={handleChange('technologies_used')}\n                />\n                <br />\n                <TextField\n                    id=\"standard-multiline-static\"\n                    label=\"Description\"\n                    multiline\n                    variant=\"outlined\"\n                    rows={4}\n                    defaultValue='description'\n                    onChange={handleChange('description')}\n                />\n                <br/>\n    \n                <TextField\n                    id=\"input-with-icon-textfield\"\n                    label=\"Github Link\"\n                    InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <GitHubIcon />\n                        </InputAdornment>\n                    ),\n                    }}\n                    defaultValue='githubrepourl'\n                    onChange={handleChange('githubrepourl')}\n                />\n                <TextField\n                    id=\"input-with-icon-textfield\"\n                    label=\"Website Link\"\n                    InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <HttpIcon />\n                        </InputAdornment>\n                    ),\n                    }}\n                    defaultValue='{values.sitelink}'\n                    onChange={handleChange('sitelink')}\n                />\n                <div>\n                    <Button variant=\"contained\" color=\"secondary\" style={styles.button} onClick={this.back}>\n                        Previous\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" style={styles.button} onClick={this.continue}>\n                        continue\n                    </Button>\n                </div>\n            </form>\n                            \n            </div>\n        );\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\n\nexport default Project;\n\n// picture: String,\n//     title: String,\n//     technologies_used: String,\n//     description: String,\n//     githubrepourl: String,\n//     sitelink: String,\n"]},"metadata":{},"sourceType":"module"}