{"ast":null,"code":"var _jsxFileName = \"/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/UserForm.js\";\nimport React, { Component } from 'react';\nimport PersonalDetails from './PersonalDetails';\nimport Project from './Projects';\nimport Links from './Links';\nimport Confirm from './Confirm';\nimport actions from '../../services';\nimport './user.css';\n\nclass UserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      username: '',\n      about: '',\n      skills: '',\n      githublink: '',\n      imageUrl: '',\n      linkedinurl: '',\n      project: [{\n        picture: '',\n        title: '',\n        technologies_used: '',\n        description: '',\n        githubrepourl: '',\n        sitelink: ''\n      }]\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.PreviousStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.addProj = () => {\n      if (this.state.project.length < 3) {\n        this.setState(prevState => ({\n          project: [...prevState.project, {\n            picture: '',\n            title: '',\n            technologies_used: '',\n            description: '',\n            githubrepourl: '',\n            sitelink: ''\n          }]\n        }));\n      }\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.handleProjectChange = input => e => {\n      console.log(e.target.dataset.id);\n      let project = [...this.state.project];\n      project[e.target.dataset.id][e.target.name] = e.target.value;\n      this.setState({\n        project\n      }, () => console.log(this.state.project));\n    };\n\n    this.handleFileUpload = (e, name) => {\n      console.log(e.target.files[0], name);\n      const uploadData = new FormData();\n      uploadData.append(\"imageUrl\", e.target.files[0]);\n      actions.fileUpload(uploadData).then(res => {\n        // console.log(res.data.path, name);\n        let state = { ...this.state\n        }; //Do your logic\n\n        if (name == 'personal_details') {\n          state.imageUrl = res.data.path;\n        }\n\n        this.setState({\n          state\n        }, () => console.log(this.state.state));\n      }).catch(err => console.error(err));\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      username,\n      about,\n      skills,\n      githublink,\n      imageUrl,\n      linkedinurl,\n      project\n    } = this.state;\n    const values = {\n      username,\n      about,\n      skills,\n      githublink,\n      imageUrl,\n      linkedinurl,\n      project\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PersonalDetails, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          handleFileUpload: this.handleFileUpload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }\n        }));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Links, {\n          nextStep: this.nextStep,\n          PreviousStep: this.PreviousStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        })));\n\n      case 3:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Project, {\n          nextStep: this.nextStep,\n          PreviousStep: this.PreviousStep,\n          handleProjectChange: this.handleProjectChange,\n          values: values,\n          index: 0,\n          addProj: this.addProj,\n          handleFileUpload: this.handleFileUpload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        })));\n\n      case 4:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Project, {\n          nextStep: this.nextStep,\n          PreviousStep: this.PreviousStep,\n          handleProjectChange: this.handleProjectChange,\n          values: values,\n          index: 1,\n          addProj: this.addProj,\n          handleFileUpload: this.handleFileUpload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        })));\n\n      case 5:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Project, {\n          nextStep: this.nextStep,\n          PreviousStep: this.PreviousStep,\n          handleProjectChange: this.handleProjectChange,\n          values: values,\n          index: 2,\n          handleFileUpload: this.handleFileUpload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        })));\n\n      case 6:\n        return /*#__PURE__*/React.createElement(Confirm, {\n          nextStep: this.nextStep,\n          PreviousStep: this.PreviousStep,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 26\n          }\n        });\n\n      default:\n        break;\n    }\n  }\n\n}\n\nexport default UserForm; // input user info: Full name, about you, picture, catch phase aboutyour occupation.\n//projects: picture, tech used, links: github, live show, codepen, about \n//links\n// username: String,\n//   skills: [String],\n//   linkedinurl: String,\n//   email: String,\n//   githublink: String,\n//   about: String,\n//   projects: [{\n//     type: Schema.Types.ObjectId,\n//     ref:\"Project\"\n//   }],\n//   favorite_jobs: [String],\n//   googleId: String,\n//   imageUrl: String,","map":{"version":3,"sources":["/Users/koladegureje/Desktop/test-vs-code/IRONHACK/Ironhack1/IronhackProj3/hire-my-dev/frontend/src/components/UserForm/UserForm.js"],"names":["React","Component","PersonalDetails","Project","Links","Confirm","actions","UserForm","state","step","username","about","skills","githublink","imageUrl","linkedinurl","project","picture","title","technologies_used","description","githubrepourl","sitelink","nextStep","setState","PreviousStep","addProj","length","prevState","handleChange","input","e","target","value","handleProjectChange","console","log","dataset","id","name","handleFileUpload","files","uploadData","FormData","append","fileUpload","then","res","data","path","catch","err","error","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PersonalDetails from './PersonalDetails';\nimport Project from './Projects';\nimport Links from './Links';\nimport Confirm from './Confirm';\nimport actions from '../../services';\nimport './user.css'\n\nclass UserForm extends Component {\n    state ={\n        step: 1,\n        username: '',\n        about: '',\n        skills: '',\n        githublink: '',\n        imageUrl: '',\n        linkedinurl:'',\n        project: [{ picture: '', title: '', technologies_used: '',description: '', githubrepourl: '', sitelink: '' }]\n    }\n\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step + 1\n        });\n    }\n\n    PreviousStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n    }\n\n    addProj = () => {\n        if(this.state.project.length < 3){\n            this.setState( (prevState) => ({\n                project: [...prevState.project, { picture: '', title: '', technologies_used: '', description: '', githubrepourl: '', sitelink: '' }],\n            }));\n        }\n    }\n\n    handleChange = input => e => {\n     this.setState({ [input]:  e.target.value });\n    }\n    handleProjectChange = input => e => {\n        console.log(e.target.dataset.id);\n        let project = [...this.state.project]\n        project[e.target.dataset.id][e.target.name] = e.target.value\n        this.setState({ project }, () => console.log(this.state.project))\n    }\n\n    handleFileUpload = (e, name) => {\n        console.log(e.target.files[0], name);\n\t\tconst uploadData = new FormData();\n        uploadData.append(\"imageUrl\", e.target.files[0])\n        actions.fileUpload( uploadData).then(res => { \n            // console.log(res.data.path, name);\n            \n            let state = {...this.state}\n            //Do your logic\n            if(name == 'personal_details'){\n                state.imageUrl = res.data.path\n            }\n            this.setState({ state }, () => console.log(this.state.state))\n        }).catch(err => console.error(err))\n}\n\n    render() {\n        const { step } = this.state;\n        const { username, about, skills, githublink, imageUrl, linkedinurl, project} = this.state;\n        const values = {username, about, skills, githublink, imageUrl, linkedinurl, project}\n\n        switch (step) {\n            case 1: \n                return (\n                    <div className=\"form\">\n                            <PersonalDetails \n                                nextStep = {this.nextStep}\n                                handleChange={this.handleChange}\n                                values={values}\n                                handleFileUpload= {this.handleFileUpload}\n                            />\n                    </div>  \n                );\n            case 2:\n                return ( \n                    <div className=\"form\">\n                        <div className=\"form-box\">\n                        <Links\n                            nextStep = {this.nextStep}\n                            PreviousStep = {this.PreviousStep}\n                            handleChange={this.handleChange}\n                            values={values}\n                        /> \n                        </div>     \n                    </div>  \n                    )\n                    case 3:\n                return ( \n                    <div className=\"form\">\n                        <div className=\"form-box\">\n                        <Project\n                            nextStep = {this.nextStep}\n                            PreviousStep = {this.PreviousStep}\n                            handleProjectChange={this.handleProjectChange}\n                            values={values}\n                            index = {0}\n                            addProj = {this.addProj}\n                            handleFileUpload= {this.handleFileUpload}\n                        />  \n                        </div>     \n                    </div>  \n                    )\n            case 4:\n                return ( \n                    <div className=\"form\">\n                        <div className=\"form-box\">\n                        <Project\n                            nextStep = {this.nextStep}\n                            PreviousStep = {this.PreviousStep}\n                            handleProjectChange={this.handleProjectChange}\n                            values={values}\n                            index = {1}\n                            addProj = {this.addProj}\n                            handleFileUpload= {this.handleFileUpload}\n                        />  \n                        </div>     \n                    </div>  \n                    )\n            case 5:\n                return ( \n                    <div className=\"form\">\n                        <div className=\"form-box\">\n                        <Project\n                            nextStep = {this.nextStep}\n                            PreviousStep = {this.PreviousStep}\n                            handleProjectChange={this.handleProjectChange}\n                            values={values}\n                            index = {2}\n                            handleFileUpload= {this.handleFileUpload}\n                        />  \n                        </div>     \n                    </div>  \n                )\n            case 6:\n                return ( <Confirm\n                    nextStep = {this.nextStep}\n                    PreviousStep = {this.PreviousStep}\n                    values={values}\n                /> )\n            default:\n                break;\n        }\n        \n    }\n}\n\nexport default UserForm;\n\n// input user info: Full name, about you, picture, catch phase aboutyour occupation.\n//projects: picture, tech used, links: github, live show, codepen, about \n//links\n\n// username: String,\n//   skills: [String],\n//   linkedinurl: String,\n//   email: String,\n//   githublink: String,\n//   about: String,\n//   projects: [{\n//     type: Schema.Types.ObjectId,\n//     ref:\"Project\"\n//   }],\n//   favorite_jobs: [String],\n//   googleId: String,\n//   imageUrl: String,\n\n"]},"metadata":{},"sourceType":"module"}